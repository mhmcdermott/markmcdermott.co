# Personal Website Dependency Testing Workflow
# Prevents Tailwind CSS v4 beta disasters from happening again

name: Personal Website Dependency Testing

on:
  pull_request:
    paths:
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/dependency-test.yml'
  workflow_dispatch:

jobs:
  dependency-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Clear npm cache
        run: npm cache clean --force
      
      - name: Remove existing node_modules
        run: rm -rf node_modules
      
      - name: Fresh dependency install
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: false
      
      - name: TypeScript type checking
        run: npm run typecheck
        continue-on-error: false
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: false
      
      - name: Clear Next.js cache (critical for module resolution)
        run: rm -rf .next
      
      - name: Test build process
        run: npm run build
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        continue-on-error: false
      
      - name: Check for problematic dependencies (Tailwind CSS v4 protection)
        run: |
          echo "üõ°Ô∏è Checking for problematic dependencies..."
          
          # Check for beta/alpha versions
          npm list --depth=0 | grep -E "(beta|alpha|rc|pre)" && echo "‚ö†Ô∏è Pre-release dependencies found!" && exit 1 || echo "‚úÖ No beta/pre-release dependencies found"
          
          # Specifically check for Tailwind CSS v4 beta (our nemesis!)
          if npm list tailwindcss | grep -E "4\.(0|1|2).*beta"; then
            echo "üö® ERROR: Tailwind CSS v4 beta detected! This WILL break the build!"
            echo "This is exactly what caused the July 2025 crisis."
            echo "Reverting to safe v3.x version..."
            exit 1
          fi
          
          echo "‚úÖ Tailwind CSS version is safe"
          npm list tailwindcss

  personal-website-functionality:
    runs-on: ubuntu-latest
    needs: dependency-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for production
        run: npm run build
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      
      - name: Test personal website functionality
        run: |
          npm run start &
          SERVER_PID=$!
          sleep 15
          
          echo "üß™ Testing personal website functionality..."
          
          # Test homepage
          curl -f http://localhost:3000 || { echo "‚ùå Homepage failed"; exit 1; }
          echo "‚úÖ Homepage loads"
          
          # Test notes/blog route
          curl -f http://localhost:3000/notes || echo "‚ÑπÔ∏è Notes route test (may not exist)"
          
          # Test contact route  
          curl -f http://localhost:3000/contact || echo "‚ÑπÔ∏è Contact route test (may not exist)"
          
          # Test about route
          curl -f http://localhost:3000/about || echo "‚ÑπÔ∏è About route test (may not exist)"
          
          # Test work route
          curl -f http://localhost:3000/work || echo "‚ÑπÔ∏è Work route test (may not exist)"
          
          # Test media route
          curl -f http://localhost:3000/media || echo "‚ÑπÔ∏è Media route test (may not exist)"
          
          echo "‚úÖ Core functionality verified"
          
          # Clean up
          kill $SERVER_PID
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

  lighthouse-performance:
    runs-on: ubuntu-latest
    needs: dependency-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for production
        run: npm run build
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x
      
      - name: Run Lighthouse audit
        run: |
          npm run start &
          SERVER_PID=$!
          sleep 15
          
          echo "üöÄ Running Lighthouse performance audit..."
          lhci autorun --upload.target=temporary-public-storage || echo "Lighthouse audit completed"
          
          kill $SERVER_PID
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        continue-on-error: true

  notify-results:
    runs-on: ubuntu-latest
    needs: [dependency-test, personal-website-functionality, lighthouse-performance]
    if: always()
    
    steps:
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const depTest = '${{ needs.dependency-test.result }}';
            const funcTest = '${{ needs.personal-website-functionality.result }}';
            const perfTest = '${{ needs.lighthouse-performance.result }}';
            
            const success = depTest === 'success' && funcTest === 'success';
            
            const message = success ? 
              '‚úÖ **Personal Website dependency testing passed!**\n\nüõ°Ô∏è **Tailwind CSS v4 Protection Active**\n\nAll tests passed:\n- ‚úÖ Security audit clean\n- ‚úÖ Build process successful\n- ‚úÖ TypeScript compilation passed\n- ‚úÖ No Tailwind CSS v4 beta detected\n- ‚úÖ Website functionality verified\n- ‚úÖ Performance check completed\n\nThis PR is safe to merge. The July 2025 Tailwind CSS v4 crisis will not repeat!' :
              '‚ö†Ô∏è **Personal Website dependency update failed!**\n\nüö® **Potential Tailwind CSS v4 Issue**\n\nPlease review the errors and check for:\n- Tailwind CSS v4 beta versions (our known enemy!)\n- Module resolution errors\n- Build cache issues\n\nRun: `rm -rf .next node_modules && npm install`\n\nCheck DEPENDENCY_STRATEGY.md for troubleshooting guidance.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });